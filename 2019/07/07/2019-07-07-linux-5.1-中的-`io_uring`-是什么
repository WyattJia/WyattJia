<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
<meta name="viewport"
      content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">

    <meta name="author" content="Wyatt Jia">


    <meta name="subtitle" content="生活不过是事件循环">




<title>Linux 5.1 中的 `io_uring` 是什么? | Live like the event loop.</title>



    <link rel="icon" href="/favicon.ico">




    <!-- stylesheets list from _config.yml -->
    
    <link rel="stylesheet" href="/css/style.css">
    



    <!-- scripts list from _config.yml -->
    
    <script src="/js/script.js"></script>
    
    <script src="/js/tocbot.min.js"></script>
    



    
    
        
    


<meta name="generator" content="Hexo 5.4.0"></head>

<body>
    <script>
        // this function is used to check current theme before page loaded.
        (() => {
            const currentTheme = window.localStorage && window.localStorage.getItem('theme') || '';
            const isDark = currentTheme === 'dark';
            const pagebody = document.getElementsByTagName('body')[0]
            if (isDark) {
                pagebody.classList.add('dark-theme');
                // mobile
                document.getElementById("mobile-toggle-theme").innerText = "· Dark"
            } else {
                pagebody.classList.remove('dark-theme');
                // mobile
                document.getElementById("mobile-toggle-theme").innerText = "· Light"
            }
        })();
    </script>

    <div class="wrapper">
        <header>
    <nav class="navbar">
        <div class="container">
            <div class="navbar-header header-logo"><a href="/">eventloop.live</a></div>
            <div class="menu navbar-right">
                
                    <a class="menu-item" href="/archives">Posts</a>
                
                    <a class="menu-item" href="/tags">Tags</a>
                
                    <a class="menu-item" href="/about">About</a>
                
                    <a class="menu-item" href="/find">Find</a>
                
                <input id="switch_default" type="checkbox" class="switch_default">
                <label for="switch_default" class="toggleBtn"></label>
            </div>
        </div>
    </nav>

    
    <nav class="navbar-mobile" id="nav-mobile">
        <div class="container">
            <div class="navbar-header">
                <div>
                    <a href="/">eventloop.live</a><a id="mobile-toggle-theme">·&nbsp;Light</a>
                </div>
                <div class="menu-toggle" onclick="mobileBtn()">&#9776; Menu</div>
            </div>
            <div class="menu" id="mobile-menu">
                
                    <a class="menu-item" href="/archives">Posts</a>
                
                    <a class="menu-item" href="/tags">Tags</a>
                
                    <a class="menu-item" href="/about">About</a>
                
                    <a class="menu-item" href="/find">Find</a>
                
            </div>
        </div>
    </nav>

</header>
<script>
    var mobileBtn = function f() {
        var toggleMenu = document.getElementsByClassName("menu-toggle")[0];
        var mobileMenu = document.getElementById("mobile-menu");
        if(toggleMenu.classList.contains("active")){
           toggleMenu.classList.remove("active")
            mobileMenu.classList.remove("active")
        }else{
            toggleMenu.classList.add("active")
            mobileMenu.classList.add("active")
        }
    }
</script>
            <div class="main">
                <div class="container">
    
    
        <div class="post-toc">
    <div class="tocbot-list">
    </div>
    <div class="tocbot-list-menu">
        <a class="tocbot-toc-expand" onclick="expand_toc()">Expand all</a>
        <a onclick="go_top()">Back to top</a>
        <a onclick="go_bottom()">Go to bottom</a>
    </div>
</div>

<script>
    document.ready(
        function () {
            tocbot.init({
                tocSelector: '.tocbot-list',
                contentSelector: '.post-content',
                headingSelector: 'h1, h2, h3, h4, h5',
                collapseDepth: 1,
                orderedList: false,
                scrollSmooth: true,
            })
        }
    )

    function expand_toc() {
        var b = document.querySelector(".tocbot-toc-expand");
        tocbot.init({
            tocSelector: '.tocbot-list',
            contentSelector: '.post-content',
            headingSelector: 'h1, h2, h3, h4, h5',
            collapseDepth: 6,
            orderedList: false,
            scrollSmooth: true,
        });
        b.setAttribute("onclick", "collapse_toc()");
        b.innerHTML = "Collapse all"
    }

    function collapse_toc() {
        var b = document.querySelector(".tocbot-toc-expand");
        tocbot.init({
            tocSelector: '.tocbot-list',
            contentSelector: '.post-content',
            headingSelector: 'h1, h2, h3, h4, h5',
            collapseDepth: 1,
            orderedList: false,
            scrollSmooth: true,
        });
        b.setAttribute("onclick", "expand_toc()");
        b.innerHTML = "Expand all"
    }

    function go_top() {
        window.scrollTo(0, 0);
    }

    function go_bottom() {
        window.scrollTo(0, document.body.scrollHeight);
    }

</script>
    

    
    <article class="post-wrap">
        <header class="post-header">
            <h1 class="post-title">Linux 5.1 中的 `io_uring` 是什么?</h1>
            
                <div class="post-meta">
                    
                        Author: <a itemprop="author" rel="author" href="/">Wyatt Jia</a>
                    

                    
                    
                </div>
            
        </header>

        <div class="post-content">
            <h2 id="What-is-io-uring"><a href="#What-is-io-uring" class="headerlink" title="What is io_uring"></a>What is io_uring</h2><p>自从 Linux 2.5 发布，其内核已经支持异步 I/O （AIO），但是自 AIO 发布以来，人们也抱吐槽了相当长一段时间 AIO 是多么的难用，效率低下。这个情况可能随着 linux 5.1 中的 io_uring 的发布而终结。<br>io_uring 是 Jens Axboe 提出的，用于代替原先 AIO 的接口，Linux 5.1合入的一个新的异步IO框架和实现。其主旨是在 Linux 上实现更加快速，更加高效的异步 I/O 操作。</p>
<h2 id="Why-io-uring"><a href="#Why-io-uring" class="headerlink" title="Why io_uring"></a>Why io_uring</h2><p>io_uring 的效率远远超过之前的异步I/O (AIO) ，它有更加高效的缓冲支持。<br>相比 AIO ，io_uring 的优点有：</p>
<ul>
<li><p>更加简单易用: io_uring 仅仅提供了三个系统调用来处理  I/O，分别是 <code>io_uring_setup</code>、<code>io_uring_register</code> 以及 <code>io_uring_enter</code></p>
</li>
<li><p>更高的可扩展性</p>
</li>
<li><p>特性丰富，适用性广</p>
</li>
<li><p>更加高效： 顾名思义，io_uring 给内核加入了一对叫做 ring buffer 的 io 缓冲区，用于在用户态和内核态之间的通信，从而避免在提交事件和完成事件的时候发生多余的内存拷贝。</p>
</li>
<li><p>更强的可伸缩性。</p>
</li>
<li><p>通过 io_uring 提供的系统调用，应用程序可以使用两个 Queue（Submission queue，Completion queue） 来与 kernel 进行通信，可以高效处理 I/O 。</p>
</li>
<li><p>通过上面提到的两个队列， I/O 事件的提交和完成可以直接由 kernel 层完成，而不需要经由用户态应用调用 system call 之后，再将 I/O 事件交由 kernel 处理。</p>
<p>  测试 per-core，4k randread 多设备下的最高 IOPS 能力：<br>  <em>数据来源于 Jens Axboe 本人</em></p>
 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Interface       QD      Polled          IOPS</span><br><span class="line">--------------------------------------------------------------------------</span><br><span class="line">io_uring        128     1               1620K</span><br><span class="line">libaio          128     0                608K</span><br><span class="line">spdk            128     1               1739K</span><br></pre></td></tr></table></figure>

<p>  使用了 polling 模式的 io_uring 速度已经接近 kernel bypass 的 spdk ,同时也完全超越了上一代 linux async io AIO 了。</p>
</li>
</ul>
<h4 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h4><ol>
<li> poll 单个 fd :<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">io_uring_prep_poll_add</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    struct io_uring_sqe *sqe, </span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">int</span> fd, </span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">short</span> poll_mask)</span></span>;</span><br></pre></td></tr></table></figure></li>
<li>poll 多个 fd:</li>
</ol>
<p><em>to be continue…</em></p>

        </div>

        
            <section class="post-copyright">
                
                    <p class="copyright-item">
                        <span>Author:</span>
                        <span>Wyatt Jia</span>
                    </p>
                
                
                
                    <p class="copyright-item">
                        <span>License:</span>
                        <span>Copyright (c) 2023 <a target="_blank" rel="noopener" href="http://creativecommons.org/licenses/by-nc/4.0/">CC-BY-NC-4.0</a> LICENSE</span>
                    </p>
                
                

            </section>
        
        <section class="post-tags">
            <div>
                <span>Tag(s):</span>
                <span class="tag">
                    
                    
                        <a href="/tags/Operating-System/"># Operating System</a>
                    
                        
                </span>
            </div>
            <div>
                <a href="javascript:window.history.back();">back</a>
                <span>· </span>
                <a href="/">home</a>
            </div>
        </section>
        <section class="post-nav">
            
                <a class="prev" rel="prev" href="/2019/09/24/2019-09-24-%5B%E8%AF%91%5Dsolving-the-wrong-problem-/">[译]Solving the wrong problem </a>
            
            
            <a class="next" rel="next" href="/2019/07/07/2019-07-07-%E7%A1%AC%E7%9B%98%E5%86%99%E5%88%B0%E4%B8%80%E5%8D%8A%E6%97%B6%EF%BC%8C%E7%AA%81%E7%84%B6%E6%96%AD%E7%94%B5%E4%BA%86%E6%80%8E%E4%B9%88%E5%8A%9E?%E2%80%94%E2%80%94-reed-solomon-%E7%BA%A0%E5%88%A0%E7%A0%81%E5%8E%9F%E7%90%86%E4%BB%8B%E7%BB%8D/">数据写到一半时，突然断电了怎么办?</a>
            
        </section>
    <script src="https://giscus.app/client.js"
        data-repo="WyattJia/WyattJia"
        data-repo-id="MDEwOlJlcG9zaXRvcnk4MzgxMzgzMg=="
        data-category="Announcements"
        data-category-id="DIC_kwDOBP7lyM4CUXoV"
        data-mapping="pathname"
        data-strict="0"
        data-reactions-enabled="1"
        data-emit-metadata="1"
        data-input-position="top"
        data-theme="light"
        data-lang="en"
        data-loading="lazy"
        crossorigin="anonymous"
        async>
</script>


    </article>
</div>


            </div>
            <footer id="footer" class="footer">
    <div class="copyright">
        <span>© Wyatt Jia | Powered by <a href="https://hexo.io" target="_blank">Hexo</a> & <a href="https://github.com/Siricee/hexo-theme-Chic" target="_blank">Chic</a></span>
    </div>
</footer>

    </div>
</body>

</html>